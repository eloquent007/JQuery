bind() : 이벤트를  연결한다. 

<!DOCTYPE html>
<html>
<head>
    <script src="</script'>http://code.jquery.com/jquery-1.7.js"></script>
    <script>
        $(document).ready(function () {
            // 이벤트를 연결합니다.
            $('h1').bind('click', function () {
                $(this).html(function (index, html) {
                    return html + '+';
                });
            });
        });
    </script>
</head>
<body>
    <h1>Header-0</h1>
    <h1>Header-1</h1>
    <h1>Header-2</h1>
</body>
</html>

 

 

 

마우스가 진입하면 reverse 클래스 속성을 추가 했다가 제거 하기

<!DOCTYPE html>
<html>
<head>
    <style>
        .reverse {
        background: Black;
        color: White;
        }
    </style>
    <script src="</script'>http://code.jquery.com/jquery-1.7.js"></script>
    <script>
        $(document).ready(function () {
            // 이벤트를 연결합니다.
            $('h1').bind('click', function () {
                $(this).html(function (index, html) {
                    return html + '+';
                });
            });

            // 이벤트를 연결합니다.
            $('h1').bind({
                mouseenter: function () { $(this).addClass('reverse'); },
                mouseleave: function () { $(this).removeClass('reverse'); }
            });
        });
    </script>
</head>
<body>
    <h1>Header-0</h1>
    <h1>Header-1</h1>
    <h1>Header-2</h1>
</body>
</html>

 


2017.12.13 일 추가.
bind() 와 on() 모두 dom 엘리먼트에 이벤트 핸들러를 바인딩 시킬경우 사용될 수 있다.
As of jQuery 1.7, the .on() method is the preferred method for attaching event handlers to a document. For earlier versions, the .bind() method is used for attaching an event handler directly to elements.


이전 버전에서는 bind(), live(), delegate() 를 사용했었다. (live() 는 deprecate 되었다. 사용하지 말자)
위 구문을 보면 1.7 부터는 .on() 사용을 권장하고 있다. jQuery 구현을 보면 bind, delegate 모두 on 을 이용하고 있다고 한다.
bind() 는 이벤트 핸들러를 엘리먼트에 즉시 bind 시킨다. 미리 생성되어 있는 엘리먼트에만 사용가능.
bind() 로 걸린 핸들러 삭제시에는 unbind() 를 사용한다. 


one() 이라는 메서드도 있는데 이 녀석은 한번 실행후 자동으로 unbind() 해준다. 필요할때 사용하자.
on() 의 동작은 이와 좀 다른것 같다. ajax 로 로딩된 동적 엘리먼트에도 핸들러 바인딩이 가능하다. 

on() 으로 걸린 핸들러 삭제시에는 off() 를 사용한다.
주의사항은 동적으로 로딩된 엘리먼트에 핸들러 등록시 selector 를 'document' 로 걸어줘야한다.

$(document).on("click", "selector", function(e){});



어느 곳에 언제 동적으로 로딩될지 모르니 on 이 호출 될때에 전체 dom 에서 찾아서 바인드 시켜주는 듯 하다.

 
