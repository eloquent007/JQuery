keydown() : 키보드가 눌러질때 발생.
keypress() : 글자가 입력될때 발생.
keyup() : 키보드가 떼어질 때 발생.
 

<!DOCTYPE html>
<html>
<head>
    <script src="</script'>http://code.jquery.com/jquery-1.6.2.js"></script>
    <script>
        $(document).ready(function (event) {
            $('textarea').keyup(function () {
                // 남은 글자 수를 구합니다.
                var inputLength = $(this).val().length;
                var remain = 150 - inputLength;

                // 문서 객체에 입력합니다.
                $('h1').html(remain);
            });
        });
    </script>
</head>
<body>
    <div>
        <p>지금 내 생각을</p>
        <h1>150</h1>
        <textarea cols="70" rows="5"></textarea>
    </div>
</body>
</html>

 

keyup이벤틀 사용하는 이유는 영어입력하면 keypress이벤트가 사용하기 좋지만, 한글은 keypress이벤트를 지원하지 않는다.
keydown이벤트가 아니라  keyup을 사용 하는 이유는.

1. 키보드 누름.
2. keydown 이벤트 발생.
3. 글자가 입력됨.
4. keypress 이벤트 발생.
5. 사용자기 키보드를 뗀다.
6. keyup이벤트 발생. 

 

키보드를 계속 누그로 있다면 keypress이벤트만 발생할텐데...
이럴 경우를 위해서 50초마다 특정 함수를 발생시켜서 체크 하는 로직이 필요하다.

 

<!DOCTYPE html>
<html>
<head>
    <script src="</script'>http://code.jquery.com/jquery-1.7.js"></script>
    <script>
        $(document).ready(function (event) {
            $('textarea').keyup(function () {
                // 남은 글자 수를 구합니다.
                var inputLength = $(this).val().length;
                var remain = 150 - inputLength;

                // 문서 객체에 입력합니다.
                $('h1').html(remain);

                // 문서 객체의 색상을 변경합니다.
                if (remain >= 0) {
                    $('h1').css('color', 'Black');
                } else {
                    $('h1').css('color', 'Red');
                }
            });
        });
</script>
    </script>
</head>
<body>
    <div>
        <p>지금 내 생각을</p>
        <h1>150</h1>
        <textarea cols="70" rows="5"></textarea>
    </div>
</body>
</html>

 

문서 작업을 다 마치고 글짜색을 표시하는 프로세스로도 가능하다.
